# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  desc "Generate Icons"
  lane :icons do
    appicon(appicon_image_file: 'spec/icon.png',
    appicon_devices: [:ipad, :iphone, :ios_marketing, :watch, :watch_marketing])
  end

  desc "Description of what the lane does"
  lane :screenshots do
    capture_screenshots
    upload_to_testflight
  end
  lane :custom_lane do
    produce(
      app_identifier: "simpleapps.com.gupshop.dev",
      skip_itc: false,
      enable_services: {
				push_notification: "on"
			}
    )
    gym(
      scheme: "dev",
      export_method: "app-store",
      export_xcargs: "-allowProvisioningUpdates"
    )
    sync_code_signing(type: "appstore")
    # build_app(scheme: "dev")

    identifiers = ["simpleapps.com.gupshop.dev"]

    set_info_plist_value(
      path: "./Runner/Info.plist",
      key: "BGTaskSchedulerPermittedIdentifiers",
      value: identifiers
    )
    # update_plist(
    #   plist_path: "Runner/Info.plist",
    #   block: proc do |plist|
    #     #plist["BGTaskSchedulerPermittedIdentifiers"] = ["simpleapps.com.gupshop.dev"]
    #     puts "Background_Mode ".plist["UIBackgroundModes"]
    #   end
    # )
    identifier = get_info_plist_value(path: "Runner/Info.plist", key: "BGTaskSchedulerPermittedIdentifiers")
    puts identifier
    # update_app_identifier(
    #   plist_path: "Runner/Info.plist", # Path to info plist file, relative to xcodeproj
    #   app_identifier: "simpleapps.com.gupshop.dev" # The App Identifier
    # )
    upload_to_testflight(app_identifier: "simpleapps.com.gupshop.dev")
    # add actions here: https://docs.fastlane.tools/actions
  end
end
